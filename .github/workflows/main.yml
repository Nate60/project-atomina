name: Atomina

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .


  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

  BUILD_PLATFORM: x64

jobs:
  build_linux:
    strategy:
      matrix:
       build_type: [Release, Debug]

    runs-on: ubuntu-22.04
    env:
        CC: /usr/bin/gcc-12
        CXX: /usr/bin/g++-12

    steps:
    
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.12
      with:
        cmake-version: '3.24.x'
    
    - name: pack update
      run: sudo apt-get update

    - name: Setup library Prerequisites
      run: sudo apt-get install -y --fix-missing g++-12 libstdc++-12-dev libstdc++-12-doc gcc-12 gcc-12-base gcc-12-doc xorg-dev ninja-build

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        version: '1.11.1'

    - name: Checkout action repo branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
        submodules: 'recursive'
    - run: git checkout HEAD    
      
    - name: Make Build Directory
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: mkdir "out" && mkdir "out/build"

    - name: Build CMake Files
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build
      run: cmake ../../ -DCMAKE_CXX_FLAGS="-fpic" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DATMA_TEST=ON -DCMAKE_CONFIGURATION_TYPES=${{matrix.build_type}} -G "Ninja"

    - name: Build Project
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build 
      run: cmake --build . --config ${{matrix.build_type}} -j 4

    - name: Run Tests
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build 
      run: xvfb-run -a ./bin/Atomina_Test
  
  build_windows:
    strategy:
      matrix:
       build_type: [Release, Debug]

    runs-on: windows-2019

    steps:
    
    - name: Checkout action repo branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
        submodules: 'recursive'
    - run: git checkout HEAD    

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.12
      with:
        cmake-version: '3.24.x'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
        vs-prerelease: true

    - name: Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Make Build Directory
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: mkdir "out" && mkdir "out/build"

    - name: Build CMake Files
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build
      run: cmake "../../" -G "Ninja" -DATMA_TEST=ON -DCMAKE_C_COMPILER:STRING="cl.exe" -DCMAKE_CXX_COMPILER:STRING="cl.exe" -DCMAKE_BUILD_TYPE:STRING="${{matrix.build_type}}" -DCMAKE_INSTALL_PREFIX:PATH="${{env.SOLUTION_FILE_PATH}}/out/install/x64-debug" 2>&1

    - name: Build Project
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build 
      run: cmake --build . --config ${{matrix.build_type}} -j 4

    - name: Run Tests
      working-directory: ${{env.SOLUTION_FILE_PATH}}/out/build 
      run: bin\Atomina_Test.exe

