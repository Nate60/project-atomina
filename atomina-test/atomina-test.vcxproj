<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{114839A5-C803-4398-9E21-AF456F1089F7}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>atominatest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectSubType>NativeUnitTestProject</ProjectSubType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IncludePath>..\atomina-game;..\atomina-dll;$(IncludePath)</IncludePath>
    <SourcePath>../atomina-game;$(SourcePath)</SourcePath>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>..\atomina-game;..\atomina-dll;$(IncludePath)</IncludePath>
    <SourcePath>../atomina-game;$(SourcePath)</SourcePath>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnabled>false</VcpkgEnabled>
    <VcpkgManifestInstall>false</VcpkgManifestInstall>
    <VcpkgAutoLink>false</VcpkgAutoLink>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(VCInstallDir)UnitTest\include;$(ProjectDir)..\atomina-dll;$(ProjectDir)..\atomina-dll\vendor\sfml\include;$(ProjectDir)..\atomina-dll\vendor\spdlog\include;..\atomina-game;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions);TEST_PROJECT</PreprocessorDefinitions>
      <UseFullPaths>true</UseFullPaths>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>/std:c++17 %(AdditionalOptions)</AdditionalOptions>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\lib;$(ProjectDir)..\dlib\lib;..\$(IntDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>sfml-main-d.lib;sfml-graphics-d.lib;sfml-window-d.lib;sfml-system-d.lib;sfml-audio-d.lib;sfml-network-d.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.dll" "$(ProjectDir)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.lib" "$(ProjectDir)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.dll" "$(ProjectDir)$(Platform)\$(Configuration)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.lib" "$(ProjectDir)$(Platform)\$(Configuration)"
xcopy /y /d "$(ProjectDir)..\dlib\lib\*.dll" "$(OutDir)"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(VCInstallDir)UnitTest\include;$(ProjectDir)..\atomina-dll;$(ProjectDir)..\atomina-dll\vendor\sfml\include;$(ProjectDir)..\atomina-dll\vendor\spdlog\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions);TEST_PROJECT</PreprocessorDefinitions>
      <UseFullPaths>true</UseFullPaths>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalOptions>/std:c++17 %(AdditionalOptions)</AdditionalOptions>
      <Optimization>MaxSpeed</Optimization>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\lib;$(ProjectDir)..\extlib\lib;..\$(IntDir);C:\Program Files\SFML\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>sfml-main.lib;sfml-graphics.lib;sfml-window.lib;sfml-system.lib;sfml-audio.lib;sfml-network.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.dll" "$(ProjectDir)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.lib" "$(ProjectDir)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.dll" "$(ProjectDir)$(Platform)\$(Configuration)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.lib" "$(ProjectDir)$(Platform)\$(Configuration)"
xcopy /y /d "$(ProjectDir)..\extlib\lib\*.dll" "$(OutDir)"</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.dll" "$(ProjectDir)$(Platform)\$(Configuration)"
xcopy /y /d "$(ProjectDir)..\atomina-dll\$(Platform)\$(Configuration)\atomina-api.lib" "$(ProjectDir)$(Platform)\$(Configuration)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="EventManagerTest.cpp" />
    <ClCompile Include="MathUtilTest.cpp" />
    <ClCompile Include="NetworkTest.cpp" />
    <ClCompile Include="ObjectManagerTest.cpp" />
    <ClCompile Include="RandomGeneratorTest.cpp" />
    <ClCompile Include="StateManagerTest.cpp" />
    <ClCompile Include="SystemManagerTest.cpp" />
    <ClCompile Include="FileTest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\atomina-dll\atomina-dll.vcxproj">
      <Project>{fedd2104-0f4e-4786-921a-1314f684ea59}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="TestState.h" />
    <ClInclude Include="TestSystem.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>